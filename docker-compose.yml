services:
  mariadb:
    image: mariadb:11.8.2
    container_name: mariadb
    restart: unless-stopped
    environment:
      MYSQL_ROOT_PASSWORD: root
      MYSQL_USER: mysql
      MYSQL_PASSWORD: mysql
      MYSQL_DATABASE: mydb
      MYSQL_CHARSET: utf8mb4
      MYSQL_COLLATION: utf8mb4_unicode_ci
    ports:
      - "3306:3306"
    volumes:
      - mariadb_data:/var/lib/mysql
      - ./mariadb-init:/docker-entrypoint-initdb.d
      - ./mariadb-init/my.cnf:/etc/mariadb/conf.d/my.cnf
      - ./backups/mariadb:/backups

  mysql:
    image: mysql:8.0
    container_name: mysql
    restart: unless-stopped
    environment:
      MYSQL_ROOT_PASSWORD: root
      MYSQL_DATABASE: mydb
      MYSQL_USER: mysql
      MYSQL_PASSWORD: mysql
    ports:
      - "3307:3306" # port hôte différent pour éviter conflit avec mariadb
    volumes:
      - mysql_data:/var/lib/mysql
      - ./mysql-init:/docker-entrypoint-initdb.d
      - ./backups/mysql:/backups

  postgres:
    image: postgres:17.5
    container_name: postgres
    restart: unless-stopped
    environment:
      POSTGRES_USER: root
      POSTGRES_PASSWORD: root
      POSTGRES_DB: postgres
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./backups/postgres:/backups

  mongodb:
    image: mongo:8.0
    container_name: mongodb
    restart: unless-stopped
    environment:
      MONGO_INITDB_ROOT_USERNAME: root
      MONGO_INITDB_ROOT_PASSWORD: root
    ports:
      - "27018:27017"
    volumes:
      - mongodb_data:/data/db

  mongo-tools:
    image: mongo:8.0
    container_name: mongo-tools
    restart: "no"
    depends_on:
      - mongodb
    entrypoint: ["tail", "-f", "/dev/null"] # pour garder le conteneur actif
    volumes:
      - ./backups/mongodb:/backups

  redis:
    image: redis:8.0
    container_name: redis
    restart: unless-stopped
    ports:
      - "6379:6379"
    volumes:
      - ./redis/redis.conf:/usr/local/etc/redis/redis.conf
    command: ["redis-server", "/usr/local/etc/redis/redis.conf"]

  adminer:
    image: adminer:4.8.1
    container_name: adminer
    restart: unless-stopped
    ports:
      - "8080:8080"
    depends_on:
      - mariadb
      - mysql
      - postgres
    environment:
      ADMINER_DEFAULT_DB_DRIVER: mysql # Adminer supporte plusieurs bases (mysql, pgsql, mongodb, etc.)

  redis-commander:
    image: rediscommander/redis-commander:latest
    container_name: redis-commander
    restart: unless-stopped
    environment:
      REDIS_HOSTS: local:redis:6379
    ports:
      - "8081:8081"
    depends_on:
      - redis

  phpmyadmin:
    image: phpmyadmin:5.2.2-apache
    container_name: phpmyadmin
    restart: unless-stopped
    environment:
      PMA_HOSTS: mariadb,mysql # multiple hôtes supportés en séparant par des virgules
      PMA_PORT: 3306 # port standard, mysql est mappé sur 3307 côté host mais interne c'est toujours 3306
    ports:
      - "8082:80"
    volumes:
      - ./phpmyadmin/themes:/var/www/html/themes
      - ./phpmyadmin/config.user.inc.php:/var/www/html/config.user.inc.php
    depends_on:
      - mariadb
      - mysql

  pgadmin:
    image: dpage/pgadmin4:9.4
    container_name: pgadmin
    restart: unless-stopped
    environment:
      PGADMIN_DEFAULT_EMAIL: admin@admin.com
      PGADMIN_DEFAULT_PASSWORD: root
    ports:
      - "8083:80"
    depends_on:
      - postgres

volumes:
  mariadb_data:
  mysql_data:
  postgres_data:
  mongodb_data:
